#compdef cmd

autoload -U is-at-least

_cmd() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" \
'--generate=[]:GENERATOR:(bash elvish fish powershell zsh)' \
'-h[Print help information]' \
'--help[Print help information]' \
'-v[]' \
'--verbose[]' \
'::subcommand:' \
":: :_cmd_commands" \
"*::: :->cmd" \
&& ret=0
    case $state in
    (cmd)
        words=($line[2] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:cmd-command-$line[2]:"
        case $line[2] in
            (add)
_arguments "${_arguments_options[@]}" \
'-p[]' \
'--pattern[]' \
'-e[]' \
'--execute[]' \
'-h[Print help information]' \
'--help[Print help information]' \
&& ret=0
;;
(get)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'::pattern:_command_names -e' \
&& ret=0
;;
(clear)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
&& ret=0
;;
(debug)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'::pattern:(bash elvish fish powershell zsh)' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
'*::subcommand -- The subcommand whose help message to display:' \
&& ret=0
;;
        esac
    ;;
esac
}

(( $+functions[_cmd_commands] )) ||
_cmd_commands() {
    local commands; commands=(
'add:' \
'get:' \
'clear:' \
'debug:' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'cmd commands' commands "$@"
}
(( $+functions[_cmd__add_commands] )) ||
_cmd__add_commands() {
    local commands; commands=()
    _describe -t commands 'cmd add commands' commands "$@"
}
(( $+functions[_cmd__clear_commands] )) ||
_cmd__clear_commands() {
    local commands; commands=()
    _describe -t commands 'cmd clear commands' commands "$@"
}
(( $+functions[_cmd__debug_commands] )) ||
_cmd__debug_commands() {
    local commands; commands=()
    _describe -t commands 'cmd debug commands' commands "$@"
}
(( $+functions[_cmd__get_commands] )) ||
_cmd__get_commands() {
    local commands; commands=()
    _describe -t commands 'cmd get commands' commands "$@"
}
(( $+functions[_cmd__help_commands] )) ||
_cmd__help_commands() {
    local commands; commands=()
    _describe -t commands 'cmd help commands' commands "$@"
}

_cmd "$@"
